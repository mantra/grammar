def f() {
	var p = (1, 2)	// tuple with type (int,int)
	g(p)			// structural type match with g's args
}

def g(tup : (int, float)) : float {
	var q = h()
	var z = h()
	x,y = h() // unpack
	x[i] = 3
	f()[i] = 3
	print h()[1]
	a.b.c = 4
	return tup[1] + tup[2]
}

def h() : (int, float) {
	return (1,2.0)
}

def q() {
	var x : (int,float) = h()
	print x[1]
}

def a() {
	var d = dict<string, (string,int)>()
	d["bob"] = ("23423x", 42)
	print d["bob"][2]
	var v = d["bob"]
	v[1] = "30234z"
}